<html>
<head>
<link rel=stylesheet type="text/css" href="../css/basic.css">
</head>
<body>
<img src="../images/logo6-64.gif" width=64 valign="bottom">
<h3>TopoLinux - Installation</h3>

<b>Linux - Sources</b>
<p>
The safest way to install QTopo on Linux is to compile it from the
sources. Download and untar the source tgz:
<pre>
	tar -xzf qtopo-XXX.tgz
</pre>
This will create a directory TopoLinux, with the following subdirectories:
<pre>
   bin .......... executable files
   basic-02 ..... TopoLinux utilities
   calib-02 ..... TopoLinux calibration utilities
   distox ....... DistoX connection and communication
   docs ......... documentation
   help ......... help pages
   i18n ......... internationalization data files
   icons ........ run-time icons
   pixmaps ...... compile-time pixmaps
   QTcalib-02 ... QTopoCalib classes
   QTshot-02 .... QTopoShot classes
   utils ........ utility classes
   tmp .......... data
</pre>
The source files are in <i>distox</i>, <i>utils</i>, <i>basic-02</i>,
<i>calib-02</i>, <i>QTshot-02</i> and <i>QTcalib-02</i>.
Furthermore, there are a few files, the most important of which is
the run-time configuration file <i>qtopo.rc</i>.
<p>

There is no "configure" and you must compile everything by hand.
You need the C++ and Qt development environment (g++, etc., and Qt).
You do not need to compile the TopoLinux utilities in <i>basic-02</i>
and <i>calib-02</i>, unless you must work without a window environment.
Therefore you need to make in four directories:
<ol>
<li>cd distox; make</li>
<li>cd utils; make</li>
<li>cd QTshot; qmake; make</li>
<li>cd QTcalib; qmake; make</li>
</ol>
<p>

At this point you have two executables <i>QTshot-02/qtshot</i> and
<i>QTcalib-02/qtcalib</i>. Run them from the <i>TopoLinux</i> root
directory.
<p>
<br>
<p>

<b>Linux - Precompiled</b>
<p>
The precompiled download archive contains the subdirectories 
<pre>
	bin ......... executables
	docs ........ documentation
	i18n ........ internationalization data
	icons ....... run-time icons
	help ........ help pages
	tmp ......... data
</pre>
<p>

Furthermore, there is the run-time configuration file <i>qtopo.rc</i>.
<p>

You need to have the Qt run-time (libraries) installed.
To execute a program, invoke it from the TopoLinux root directory.
For example
<pre>
	./bin/qtshot
</pre>
<p>
<br>
<p>

<b>Windows - Sources</b>
<p>
The Windows sources are the same as for Linux. Download the source archive
and unzip it.
<p>

You need to Microsoft Visual C++ 2008 (v. 9.0) and the Qt development
environment (Qt-4.x.x). Create a new VisualC project with all the
C source and header files in the subdirectories <i>distox</i>,
<i>utils</i>, and <i>QTshot-02</i>.
<p>

Open a console window and cd into <i>QTshot-02</i>. Source the MSVC-9.0
<i>vcvarsall.bat</i> (see Qt build documentation). Execute <i>Qt/bin/moc</i>
on the files 
<ul>
<li><i>PlotCanvas.h</i></li>
<li><i>BackgroundImage.h</i></li>
<li><i>QTshot.h</i></li>
</ul>
and include the moc-files in the project.
<p>

Compile the project, with <tt>QT3_SUPPORT</tt>.
<p>
<br>
<p>

<b>Windows - Precompiled</b>
<p>

You need to install the Microsoft VisulaC 2008 redistributable package.
You can get it from http://go.microsoft.com. Make sure to get that one
for VisualC 2008 (v. 9.0).
<p>

Download the precompiled archive, and unzip it.
Open a console window to the <i>TopoLinux</i> root, and execute 
<i>bin/qtshot</i>.
<p>
<br>
<p>


</body>
</html>

